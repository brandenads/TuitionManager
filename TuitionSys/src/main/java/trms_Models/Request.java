package trms_Models;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * Request Value Object.
  * This class is value object representing database table Request
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class Request implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int requestID;
    private int personID;
    private int originalAmount;
    private int adjustedAmount;
    private int eventID;
    private String status;
    private String employeeReason;
    private String overrideReason;
    private int fileID;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public Request () {

    }

    public Request (int requestIDIn) {

          this.requestID = requestIDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getRequestID() {
          return this.requestID;
    }
    public void setRequestID(int requestIDIn) {
          this.requestID = requestIDIn;
    }

    public int getPersonID() {
          return this.personID;
    }
    public void setPersonID(int personIDIn) {
          this.personID = personIDIn;
    }

    public int getOriginalAmount() {
          return this.originalAmount;
    }
    public void setOriginalAmount(int originalAmountIn) {
          this.originalAmount = originalAmountIn;
    }

    public int getAdjustedAmount() {
          return this.adjustedAmount;
    }
    public void setAdjustedAmount(int adjustedAmountIn) {
          this.adjustedAmount = adjustedAmountIn;
    }

    public int getEventID() {
          return this.eventID;
    }
    public void setEventID(int eventIDIn) {
          this.eventID = eventIDIn;
    }

    public String getStatus() {
          return this.status;
    }
    public void setStatus(String statusIn) {
          this.status = statusIn;
    }

    public String getEmployeeReason() {
          return this.employeeReason;
    }
    public void setEmployeeReason(String employeeReasonIn) {
          this.employeeReason = employeeReasonIn;
    }

    public String getOverrideReason() {
          return this.overrideReason;
    }
    public void setOverrideReason(String overrideReasonIn) {
          this.overrideReason = overrideReasonIn;
    }

    public int getFileID() {
          return this.fileID;
    }
    public void setFileID(int fileIDIn) {
          this.fileID = fileIDIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int requestIDIn,
          int personIDIn,
          int originalAmountIn,
          int adjustedAmountIn,
          int eventIDIn,
          String statusIn,
          String employeeReasonIn,
          String overrideReasonIn,
          int fileIDIn) {
          this.requestID = requestIDIn;
          this.personID = personIDIn;
          this.originalAmount = originalAmountIn;
          this.adjustedAmount = adjustedAmountIn;
          this.eventID = eventIDIn;
          this.status = statusIn;
          this.employeeReason = employeeReasonIn;
          this.overrideReason = overrideReasonIn;
          this.fileID = fileIDIn;
    }


    /** 
     * hasEqualMapping-method will compare two Request instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(Request valueObject) {

          if (valueObject.getRequestID() != this.requestID) {
                    return(false);
          }
          if (valueObject.getPersonID() != this.personID) {
                    return(false);
          }
          if (valueObject.getOriginalAmount() != this.originalAmount) {
                    return(false);
          }
          if (valueObject.getAdjustedAmount() != this.adjustedAmount) {
                    return(false);
          }
          if (valueObject.getEventID() != this.eventID) {
                    return(false);
          }
          if (this.status == null) {
                    if (valueObject.getStatus() != null)
                           return(false);
          } else if (!this.status.equals(valueObject.getStatus())) {
                    return(false);
          }
          if (this.employeeReason == null) {
                    if (valueObject.getEmployeeReason() != null)
                           return(false);
          } else if (!this.employeeReason.equals(valueObject.getEmployeeReason())) {
                    return(false);
          }
          if (this.overrideReason == null) {
                    if (valueObject.getOverrideReason() != null)
                           return(false);
          } else if (!this.overrideReason.equals(valueObject.getOverrideReason())) {
                    return(false);
          }
          if (valueObject.getFileID() != this.fileID) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass Request, mapping to table Request\n");
        out.append("Persistent attributes: \n"); 
        out.append("requestID = " + this.requestID + "\n"); 
        out.append("personID = " + this.personID + "\n"); 
        out.append("originalAmount = " + this.originalAmount + "\n"); 
        out.append("adjustedAmount = " + this.adjustedAmount + "\n"); 
        out.append("eventID = " + this.eventID + "\n"); 
        out.append("status = " + this.status + "\n"); 
        out.append("employeeReason = " + this.employeeReason + "\n"); 
        out.append("overrideReason = " + this.overrideReason + "\n"); 
        out.append("fileID = " + this.fileID + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        Request cloned = new Request();

        cloned.setRequestID(this.requestID); 
        cloned.setPersonID(this.personID); 
        cloned.setOriginalAmount(this.originalAmount); 
        cloned.setAdjustedAmount(this.adjustedAmount); 
        cloned.setEventID(this.eventID); 
        if (this.status != null)
             cloned.setStatus(new String(this.status)); 
        if (this.employeeReason != null)
             cloned.setEmployeeReason(new String(this.employeeReason)); 
        if (this.overrideReason != null)
             cloned.setOverrideReason(new String(this.overrideReason)); 
        cloned.setFileID(this.fileID); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}


             